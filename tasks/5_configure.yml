---
- name: provision configuration files and scripts
  become:               yes
  become_user:          '{{ seafile_user }}'
  template:
    src:                '{{ item.src }}'
    dest:               '{{ item.dest }}'
    owner:              '{{ seafile_user }}'
    group:              '{{ seafile_user }}'
    mode:               '{{ item.exec | default(false) | ternary(0750,0640) }}'
  with_items:
    # configuration files
    - src:              'ccnet/seafile.ini'
      dest:             '{{ seafile_ccnet_dir }}/'
    - src:              'conf/ccnet.conf'
      dest:             '{{ seafile_conf_dir }}/'
    - src:              'conf/seafile.conf'
      dest:             '{{ seafile_conf_dir }}/'
    - src:              'conf/seafdav.conf'
      dest:             '{{ seafile_conf_dir }}/'
    - src:              'conf/seahub_settings.py'
      dest:             '{{ seafile_conf_dir }}/'
    - src:              'conf/gunicorn.conf'
      dest:             '{{ seafile_conf_dir }}/'
    # handy environment file to be sourced when doing things manually
    - src:              'bin/environment'
      dest:             '{{ seafile_org_dir + "/bin/" }}'
    # perform a garbage collection maintenance
    - src:              'bin/garbage-collect'
      dest:             '{{ seafile_org_dir + "/bin/" }}'
      exec:             true
  notify:               restart_seafile

- name:       provision crontabs
  cron:
    name:       '{{ item.name }}'
    user:       '{{ seafile_user }}'
    job:        '{{ seafile_org_dir + "/bin/" + item.script }}'
    minute:     '{{ item.min | default(omit) }}'
    hour:       '{{ item.hou | default(omit) }}'
    day:        '{{ item.dom | default(omit) }}'
    month:      '{{ item.mon | default(omit) }}'
    weekday:    '{{ item.dow | default(omit) }}'
    state:      '{{ item.enabled | default(False) | ternary("present", "absent") }}'
  with_items:
    - name:       Weekly Garbage Collection
      script:     garbage-collect
      min:        0
      hou:        5
      dow:        7
      enabled:    '{{ seafile_cron_gc_enabled }}'

- name:       move the default avatars directory out of the way
  become:      yes
  become_user: '{{ seafile_user }}'
  shell:      >
              ORI='{{ seafile_latest_dir }}/seahub/media/avatars';
              test -e $ORI && (test -L $ORI || mv -v $ORI ${ORI}.ori)
  register:     _shell
  changed_when: _shell.stdout_lines|length > 0

- name:       link media folders with local custom data
  become:      yes
  become_user: '{{ seafile_user }}'
  file:
    src:      '{{ seafile_seahubdata_dir +"/"+ item }}'
    dest:     '{{ seafile_latest_dir +"/seahub/media/" + item }}'
    owner:    '{{ seafile_user }}'
    group:    '{{ seafile_user }}'
    mode:     0755
    state:    link
    force:    yes
  with_items:
  - avatars
  - custom

- name:       copy default avatars to custom data dir
  become:      yes
  become_user: '{{ seafile_user }}'
  shell:      |
              ORI='{{ seafile_latest_dir }}/seahub/media/avatars';
              rsync -ai ${ORI}.ori/ $ORI/
  register:     _shell
  changed_when: _shell.stdout_lines|length > 0

